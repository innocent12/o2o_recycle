<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xmlns:context="http://www.springframework.org/schema/context" 
		xmlns:aop="http://www.springframework.org/schema/aop" 
		xmlns:tx="http://www.springframework.org/schema/tx" 
		xmlns:task="http://www.springframework.org/schema/task"
		xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
		xmlns:mvc="http://www.springframework.org/schema/mvc" 
		xsi:schemaLocation="http://www.springframework.org/schema/beans
						     http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
						     http://www.springframework.org/schema/mvc
						     http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd 
						     http://www.springframework.org/schema/context 
						     http://www.springframework.org/schema/context/spring-context-4.3.xsd 
						     http://www.springframework.org/schema/aop 
						     http://www.springframework.org/schema/aop/spring-aop-4.3.xsd 
						     http://www.springframework.org/schema/tx 
						     http://www.springframework.org/schema/tx/spring-tx-4.3.xsd 
						     http://www.springframework.org/schema/task 
						     http://www.springframework.org/schema/task/spring-task-4.3.xsd 
						     http://code.alibabatech.com/schema/dubbo 
						     http://code.alibabatech.com/schema/dubbo/dubbo.xsd 
						     http://www.springframework.org/schema/mvc 
						     http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd ">
						
		
	<dubbo:application name="recycle-web"/>
    	<!-- 声明需要暴露的服务接口 -->
	<dubbo:registry protocol="zookeeper" address="localhost:2181"/>
	<dubbo:consumer timeout="100000" check="false"/>
	<dubbo:reference interface="user.service.AddressService" id="addressService" group="1"  />
	<dubbo:reference interface="user.service.AdminlogService" id="adminlogService" group="1"  />
	<dubbo:reference interface="user.service.AdminService" id="adminService" group="1"  />
	<dubbo:reference interface="user.service.CollectorService" id="collectorService" group="1"  />
	<dubbo:reference interface="user.service.SellerAddressService" id="sellerAddressService" group="1"  />
	<dubbo:reference interface="user.service.SellerService" id="sellerService" group="1"  />
	<dubbo:reference interface="order.service.OrderInfoService" id="orderinfoService" group="1"  />
	<dubbo:reference interface="category.service.ResCategService" id="resourceService" group="1"  />
	<dubbo:reference interface="category.service.ResRecordService" id="recordService" group="1"  />
		<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <mvc:annotation-driven />
    <context:component-scan base-package="web.controller" />
		
		<!-- 静态资源 -->
	    <mvc:default-servlet-handler/> 
	 <!--    <mvc:resources mapping="/html/css/**" location="/WEB-INF/css/" cache-period="31556926"/> 
	    <mvc:resources mapping="/html/js/**" location="/WEB-INF/js/" cache-period="31556926"/> 
	    <mvc:resources mapping="/html/images/**" location="/WEB-INF/images/" cache-period="31556926"/> 
	    <mvc:resources mapping="/jsp/**" location="/WEB-INF/jsp/" cache-period="31556926"/> 
	    <mvc:resources mapping="/index/**" location="/WEB-INF/index/" cache-period="31556926"/> 
	    <mvc:resources mapping="/html/**" location="/WEB-INF/html/" cache-period="31556926"/>
	   
	    -->
	   <!--避免IE执行AJAX时，返回JSON出现下载文件 -->  
    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <value>text/html;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean>  
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->  
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
                <ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->  
            </list>  
        </property>  
    </bean>  
		
		<!-- 配置视图解释器  定义跳转的文件的前后缀 ，视图模式配置-->
		<!-- <bean id="htmlViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			<property name="prefix" value=""/>
			<property name="suffix" value=".html"/>
			<property name="contentType" value="text/html;charset=UTF-8"></property>
		</bean>  -->
		
		<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	    <bean id="multipartResolver"  
	        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
	        <!-- 默认编码 -->
	        <property name="defaultEncoding" value="utf-8" />  
	        <!-- 文件大小最大值 -->
	        <property name="maxUploadSize" value="10485760000" />  
	        <!-- 内存中的最大值 -->
	        <property name="maxInMemorySize" value="40960" />  
	    </bean> 
		
		<!-- 声明DispatcherServlet不要拦截下面声明的目录 -->  
    	<mvc:resources location="/images/" mapping="/images/**"/> 
    	
</beans>
