package user.pojo;

import java.util.ArrayList;
import java.util.List;

public class SellerAddressExample{
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table seller_address
     *
     * @mbg.generated Thu Mar 15 10:40:36 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table seller_address
     *
     * @mbg.generated Thu Mar 15 10:40:36 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table seller_address
     *
     * @mbg.generated Thu Mar 15 10:40:36 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seller_address
     *
     * @mbg.generated Thu Mar 15 10:40:36 CST 2018
     */
    public SellerAddressExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seller_address
     *
     * @mbg.generated Thu Mar 15 10:40:36 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seller_address
     *
     * @mbg.generated Thu Mar 15 10:40:36 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seller_address
     *
     * @mbg.generated Thu Mar 15 10:40:36 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seller_address
     *
     * @mbg.generated Thu Mar 15 10:40:36 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seller_address
     *
     * @mbg.generated Thu Mar 15 10:40:36 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seller_address
     *
     * @mbg.generated Thu Mar 15 10:40:36 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seller_address
     *
     * @mbg.generated Thu Mar 15 10:40:36 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seller_address
     *
     * @mbg.generated Thu Mar 15 10:40:36 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seller_address
     *
     * @mbg.generated Thu Mar 15 10:40:36 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seller_address
     *
     * @mbg.generated Thu Mar 15 10:40:36 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table seller_address
     *
     * @mbg.generated Thu Mar 15 10:40:36 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andAddresstypeIsNull() {
            addCriterion("addressType is null");
            return (Criteria) this;
        }

        public Criteria andAddresstypeIsNotNull() {
            addCriterion("addressType is not null");
            return (Criteria) this;
        }

        public Criteria andAddresstypeEqualTo(Integer value) {
            addCriterion("addressType =", value, "addresstype");
            return (Criteria) this;
        }

        public Criteria andAddresstypeNotEqualTo(Integer value) {
            addCriterion("addressType <>", value, "addresstype");
            return (Criteria) this;
        }

        public Criteria andAddresstypeGreaterThan(Integer value) {
            addCriterion("addressType >", value, "addresstype");
            return (Criteria) this;
        }

        public Criteria andAddresstypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("addressType >=", value, "addresstype");
            return (Criteria) this;
        }

        public Criteria andAddresstypeLessThan(Integer value) {
            addCriterion("addressType <", value, "addresstype");
            return (Criteria) this;
        }

        public Criteria andAddresstypeLessThanOrEqualTo(Integer value) {
            addCriterion("addressType <=", value, "addresstype");
            return (Criteria) this;
        }

        public Criteria andAddresstypeIn(List<Integer> values) {
            addCriterion("addressType in", values, "addresstype");
            return (Criteria) this;
        }

        public Criteria andAddresstypeNotIn(List<Integer> values) {
            addCriterion("addressType not in", values, "addresstype");
            return (Criteria) this;
        }

        public Criteria andAddresstypeBetween(Integer value1, Integer value2) {
            addCriterion("addressType between", value1, value2, "addresstype");
            return (Criteria) this;
        }

        public Criteria andAddresstypeNotBetween(Integer value1, Integer value2) {
            addCriterion("addressType not between", value1, value2, "addresstype");
            return (Criteria) this;
        }

        public Criteria andAddressidIsNull() {
            addCriterion("addressId is null");
            return (Criteria) this;
        }

        public Criteria andAddressidIsNotNull() {
            addCriterion("addressId is not null");
            return (Criteria) this;
        }

        public Criteria andAddressidEqualTo(String value) {
            addCriterion("addressId =", value, "addressid");
            return (Criteria) this;
        }

        public Criteria andAddressidNotEqualTo(String value) {
            addCriterion("addressId <>", value, "addressid");
            return (Criteria) this;
        }

        public Criteria andAddressidGreaterThan(String value) {
            addCriterion("addressId >", value, "addressid");
            return (Criteria) this;
        }

        public Criteria andAddressidGreaterThanOrEqualTo(String value) {
            addCriterion("addressId >=", value, "addressid");
            return (Criteria) this;
        }

        public Criteria andAddressidLessThan(String value) {
            addCriterion("addressId <", value, "addressid");
            return (Criteria) this;
        }

        public Criteria andAddressidLessThanOrEqualTo(String value) {
            addCriterion("addressId <=", value, "addressid");
            return (Criteria) this;
        }

        public Criteria andAddressidLike(String value) {
            addCriterion("addressId like", value, "addressid");
            return (Criteria) this;
        }

        public Criteria andAddressidNotLike(String value) {
            addCriterion("addressId not like", value, "addressid");
            return (Criteria) this;
        }

        public Criteria andAddressidIn(List<String> values) {
            addCriterion("addressId in", values, "addressid");
            return (Criteria) this;
        }

        public Criteria andAddressidNotIn(List<String> values) {
            addCriterion("addressId not in", values, "addressid");
            return (Criteria) this;
        }

        public Criteria andAddressidBetween(String value1, String value2) {
            addCriterion("addressId between", value1, value2, "addressid");
            return (Criteria) this;
        }

        public Criteria andAddressidNotBetween(String value1, String value2) {
            addCriterion("addressId not between", value1, value2, "addressid");
            return (Criteria) this;
        }

        public Criteria andSelleraccountIsNull() {
            addCriterion("sellerAccount is null");
            return (Criteria) this;
        }

        public Criteria andSelleraccountIsNotNull() {
            addCriterion("sellerAccount is not null");
            return (Criteria) this;
        }

        public Criteria andSelleraccountEqualTo(String value) {
            addCriterion("sellerAccount =", value, "selleraccount");
            return (Criteria) this;
        }

        public Criteria andSelleraccountNotEqualTo(String value) {
            addCriterion("sellerAccount <>", value, "selleraccount");
            return (Criteria) this;
        }

        public Criteria andSelleraccountGreaterThan(String value) {
            addCriterion("sellerAccount >", value, "selleraccount");
            return (Criteria) this;
        }

        public Criteria andSelleraccountGreaterThanOrEqualTo(String value) {
            addCriterion("sellerAccount >=", value, "selleraccount");
            return (Criteria) this;
        }

        public Criteria andSelleraccountLessThan(String value) {
            addCriterion("sellerAccount <", value, "selleraccount");
            return (Criteria) this;
        }

        public Criteria andSelleraccountLessThanOrEqualTo(String value) {
            addCriterion("sellerAccount <=", value, "selleraccount");
            return (Criteria) this;
        }

        public Criteria andSelleraccountLike(String value) {
            addCriterion("sellerAccount like", value, "selleraccount");
            return (Criteria) this;
        }

        public Criteria andSelleraccountNotLike(String value) {
            addCriterion("sellerAccount not like", value, "selleraccount");
            return (Criteria) this;
        }

        public Criteria andSelleraccountIn(List<String> values) {
            addCriterion("sellerAccount in", values, "selleraccount");
            return (Criteria) this;
        }

        public Criteria andSelleraccountNotIn(List<String> values) {
            addCriterion("sellerAccount not in", values, "selleraccount");
            return (Criteria) this;
        }

        public Criteria andSelleraccountBetween(String value1, String value2) {
            addCriterion("sellerAccount between", value1, value2, "selleraccount");
            return (Criteria) this;
        }

        public Criteria andSelleraccountNotBetween(String value1, String value2) {
            addCriterion("sellerAccount not between", value1, value2, "selleraccount");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table seller_address
     *
     * @mbg.generated do_not_delete_during_merge Thu Mar 15 10:40:36 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table seller_address
     *
     * @mbg.generated Thu Mar 15 10:40:36 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}